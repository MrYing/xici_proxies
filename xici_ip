#!/usr/bin/env python
# -*- coding:utf-8 -*-
# author:joel
# time:2018/8/24 9:40

import random
import re
from lxml import etree
import requests

"""
用法：（只获取了第一页，100条中速度与连接时间都小于1秒的代理）

# import random
# from xici_ip import getProxy
# 
# proxies, num = getProxy()
# 
# proxy = proxies[random.randint(0, num-1)]
# print(proxy)
"""

start_url = 'http://www.xicidaili.com/nn/1'
user_agent = [
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)",
    "Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)",
    "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)",
    "Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)",
    "Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0",
    "Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5",
    "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER",
]
headers = {
    'User-Agent': 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
}
def tool(text):
    pattern = re.compile('(\d+\.\d+|\d+).*?')
    text = re.findall(pattern, text)
    return float(text[0])

def getHtml():
    headers = {
        'User-Agent': user_agent[random.randint(0, 20)]
    }
    r = requests.get(start_url, headers=headers)
    html = etree.HTML(r.text)


    ip_info = []
    ip = html.xpath('//*[@id="ip_list"]/tr/td[2]/text()')
    port = html.xpath('//*[@id="ip_list"]/tr/td[3]/text()')
    locate = html.xpath('//*[@id="ip_list"]/tr/td[4]/a/text()')
    type = html.xpath('//*[@id="ip_list"]/tr/td[5]/text()')
    http = html.xpath('//*[@id="ip_list"]/tr/td[6]/text()')
    velocity = html.xpath('//*[@id="ip_list"]/tr/td[7]/div[1]/@title')
    conntime = html.xpath('//*[@id="ip_list"]/tr/td[8]/div[1]/@title')
    daytime = html.xpath('//*[@id="ip_list"]/tr/td[9]/text()')
    date = html.xpath('//*[@id="ip_list"]/tr/td[10]/text()')

    for i in range(100):
        if tool(velocity[i]) < 1.0 and tool(conntime[i]) < 1.0 and tool(daytime[i]) > 1:
            ip_one = []
            ip_one.append(ip[i])
            ip_one.append(port[i])
            try:
                ip_one.append(locate[i])
            except:
                # print(u'无地名来源...')
                continue
            ip_one.append(type[i])
            ip_one.append(http[i])

            ip_one.append(tool(velocity[i]))
            ip_one.append(tool(conntime[i]))
            ip_one.append(tool(daytime[i]))
            ip_one.append(date[i])
            # print(ip_one)
            ip_info.append(ip_one)

    return ip_info

def getProxy():
    ip_info = getHtml()
    proxies = []
    for ipinfo in ip_info:
        dict = {}
        ip = ipinfo[0]+':'+ipinfo[1]
        dict[ipinfo[4]] = ip

        try:
            r = requests.get('http://www.baidu.com/', proxies=dict)
            if r.status_code == 200:
                proxies.append(dict)
        except Exception as e:
            print(e)

    num = len(proxies)
    # print(proxies)
    return proxies, num



if __name__ == '__main__':
    getProxy()


